E:\Java\jdk1.8.0_201\bin\java.exe -ea -Didea.test.cyclic.buffer.size=1048576 "-javaagent:E:\Program Files (x86)\JetBrains\IntelliJ IDEA 2020.1\lib\idea_rt.jar=51744:E:\Program Files (x86)\JetBrains\IntelliJ IDEA 2020.1\bin" -Dfile.encoding=UTF-8 -classpath "E:\Program Files (x86)\JetBrains\IntelliJ IDEA 2020.1\lib\idea_rt.jar;E:\Program Files (x86)\JetBrains\IntelliJ IDEA 2020.1\plugins\junit\lib\junit5-rt.jar;E:\Program Files (x86)\JetBrains\IntelliJ IDEA 2020.1\plugins\junit\lib\junit-rt.jar;E:\Java\jdk1.8.0_201\jre\lib\charsets.jar;E:\Java\jdk1.8.0_201\jre\lib\deploy.jar;E:\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;E:\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;E:\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;E:\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;E:\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;E:\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;E:\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;E:\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;E:\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;E:\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;E:\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;E:\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;E:\Java\jdk1.8.0_201\jre\lib\javaws.jar;E:\Java\jdk1.8.0_201\jre\lib\jce.jar;E:\Java\jdk1.8.0_201\jre\lib\jfr.jar;E:\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;E:\Java\jdk1.8.0_201\jre\lib\jsse.jar;E:\Java\jdk1.8.0_201\jre\lib\management-agent.jar;E:\Java\jdk1.8.0_201\jre\lib\plugin.jar;E:\Java\jdk1.8.0_201\jre\lib\resources.jar;E:\Java\jdk1.8.0_201\jre\lib\rt.jar;E:\Code\Open_Source\dragon-core\target\test-classes;E:\Code\Open_Source\dragon-core\target\classes;E:\Maven\apache-maven-3.6.0-repository\commons-codec\commons-codec\1.14\commons-codec-1.14.jar;E:\Maven\apache-maven-3.6.0-repository\org\apache\commons\commons-lang3\3.9\commons-lang3-3.9.jar;E:\Maven\apache-maven-3.6.0-repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;E:\Maven\apache-maven-3.6.0-repository\org\reflections\reflections\0.9.12\reflections-0.9.12.jar;E:\Maven\apache-maven-3.6.0-repository\org\javassist\javassist\3.26.0-GA\javassist-3.26.0-GA.jar;E:\Maven\apache-maven-3.6.0-repository\com\google\guava\guava\28.2-jre\guava-28.2-jre.jar;E:\Maven\apache-maven-3.6.0-repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;E:\Maven\apache-maven-3.6.0-repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;E:\Maven\apache-maven-3.6.0-repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;E:\Maven\apache-maven-3.6.0-repository\org\checkerframework\checker-qual\2.10.0\checker-qual-2.10.0.jar;E:\Maven\apache-maven-3.6.0-repository\com\google\errorprone\error_prone_annotations\2.3.4\error_prone_annotations-2.3.4.jar;E:\Maven\apache-maven-3.6.0-repository\com\google\j2objc\j2objc-annotations\1.3\j2objc-annotations-1.3.jar;E:\Maven\apache-maven-3.6.0-repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;E:\Maven\apache-maven-3.6.0-repository\org\projectlombok\lombok\1.18.12\lombok-1.18.12.jar;E:\Maven\apache-maven-3.6.0-repository\com\alibaba\fastjson\1.2.68\fastjson-1.2.68.jar;E:\Maven\apache-maven-3.6.0-repository\com\esotericsoftware\kryo\5.0.0-RC1\kryo-5.0.0-RC1.jar;E:\Maven\apache-maven-3.6.0-repository\com\esotericsoftware\reflectasm\1.11.7\reflectasm-1.11.7.jar;E:\Maven\apache-maven-3.6.0-repository\org\objenesis\objenesis\2.6\objenesis-2.6.jar;E:\Maven\apache-maven-3.6.0-repository\com\esotericsoftware\minlog\1.3.0\minlog-1.3.0.jar;E:\Maven\apache-maven-3.6.0-repository\com\caucho\hessian\4.0.63\hessian-4.0.63.jar;E:\Maven\apache-maven-3.6.0-repository\junit\junit\4.11\junit-4.11.jar;E:\Maven\apache-maven-3.6.0-repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;E:\Maven\apache-maven-3.6.0-repository\org\openjdk\jmh\jmh-core\1.23\jmh-core-1.23.jar;E:\Maven\apache-maven-3.6.0-repository\net\sf\jopt-simple\jopt-simple\4.6\jopt-simple-4.6.jar;E:\Maven\apache-maven-3.6.0-repository\org\apache\commons\commons-math3\3.2\commons-math3-3.2.jar;E:\Maven\apache-maven-3.6.0-repository\org\openjdk\jmh\jmh-generator-annprocess\1.23\jmh-generator-annprocess-1.23.jar" com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit4 com.dragon.core.serialize.SerializeTest,jmhTest
# JMH version: 1.23
# VM version: JDK 1.8.0_201, Java HotSpot(TM) 64-Bit Server VM, 25.201-b09
# VM invoker: E:\Java\jdk1.8.0_201\jre\bin\java.exe
# VM options: -ea -Didea.test.cyclic.buffer.size=1048576 -javaagent:E:\Program Files (x86)\JetBrains\IntelliJ IDEA 2020.1\lib\idea_rt.jar=51744:E:\Program Files (x86)\JetBrains\IntelliJ IDEA 2020.1\bin -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.dragon.core.serialize.SerializeTest.fastJsonSerializeTest

# Run progress: 0.00% complete, ETA 00:00:32
# Fork: 1 of 2
# Warmup Iteration   1: ≈ 10⁻⁶ s/op
Iteration   1: ≈ 10⁻⁶ s/op
Iteration   2: ≈ 10⁻⁶ s/op
Iteration   3: ≈ 10⁻⁶ s/op

# Run progress: 12.50% complete, ETA 00:00:35
# Fork: 2 of 2
# Warmup Iteration   1: ≈ 10⁻⁶ s/op
Iteration   1: ≈ 10⁻⁶ s/op
Iteration   2: ≈ 10⁻⁶ s/op
Iteration   3: ≈ 10⁻⁶ s/op


Result "com.dragon.core.serialize.SerializeTest.fastJsonSerializeTest":
  ≈ 10⁻⁶ s/op


# JMH version: 1.23
# VM version: JDK 1.8.0_201, Java HotSpot(TM) 64-Bit Server VM, 25.201-b09
# VM invoker: E:\Java\jdk1.8.0_201\jre\bin\java.exe
# VM options: -ea -Didea.test.cyclic.buffer.size=1048576 -javaagent:E:\Program Files (x86)\JetBrains\IntelliJ IDEA 2020.1\lib\idea_rt.jar=51744:E:\Program Files (x86)\JetBrains\IntelliJ IDEA 2020.1\bin -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.dragon.core.serialize.SerializeTest.hessianSerializeTest

# Run progress: 25.00% complete, ETA 00:00:29
# Fork: 1 of 2
# Warmup Iteration   1: ≈ 10⁻⁵ s/op
Iteration   1: ≈ 10⁻⁶ s/op
Iteration   2: ≈ 10⁻⁶ s/op
Iteration   3: ≈ 10⁻⁶ s/op

# Run progress: 37.50% complete, ETA 00:00:24
# Fork: 2 of 2
# Warmup Iteration   1: ≈ 10⁻⁵ s/op
Iteration   1: ≈ 10⁻⁶ s/op
Iteration   2: ≈ 10⁻⁶ s/op
Iteration   3: ≈ 10⁻⁶ s/op


Result "com.dragon.core.serialize.SerializeTest.hessianSerializeTest":
  ≈ 10⁻⁶ s/op


# JMH version: 1.23
# VM version: JDK 1.8.0_201, Java HotSpot(TM) 64-Bit Server VM, 25.201-b09
# VM invoker: E:\Java\jdk1.8.0_201\jre\bin\java.exe
# VM options: -ea -Didea.test.cyclic.buffer.size=1048576 -javaagent:E:\Program Files (x86)\JetBrains\IntelliJ IDEA 2020.1\lib\idea_rt.jar=51744:E:\Program Files (x86)\JetBrains\IntelliJ IDEA 2020.1\bin -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.dragon.core.serialize.SerializeTest.jdkSerializeTest

# Run progress: 50.00% complete, ETA 00:00:19
# Fork: 1 of 2
# Warmup Iteration   1: ≈ 10⁻⁵ s/op
Iteration   1: ≈ 10⁻⁵ s/op
Iteration   2: ≈ 10⁻⁵ s/op
Iteration   3: ≈ 10⁻⁵ s/op

# Run progress: 62.50% complete, ETA 00:00:14
# Fork: 2 of 2
# Warmup Iteration   1: ≈ 10⁻⁵ s/op
Iteration   1: ≈ 10⁻⁵ s/op
Iteration   2: ≈ 10⁻⁵ s/op
Iteration   3: ≈ 10⁻⁵ s/op


Result "com.dragon.core.serialize.SerializeTest.jdkSerializeTest":
  ≈ 10⁻⁵ s/op


# JMH version: 1.23
# VM version: JDK 1.8.0_201, Java HotSpot(TM) 64-Bit Server VM, 25.201-b09
# VM invoker: E:\Java\jdk1.8.0_201\jre\bin\java.exe
# VM options: -ea -Didea.test.cyclic.buffer.size=1048576 -javaagent:E:\Program Files (x86)\JetBrains\IntelliJ IDEA 2020.1\lib\idea_rt.jar=51744:E:\Program Files (x86)\JetBrains\IntelliJ IDEA 2020.1\bin -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.dragon.core.serialize.SerializeTest.kryoSerializeTest

# Run progress: 75.00% complete, ETA 00:00:09
# Fork: 1 of 2
# Warmup Iteration   1: ≈ 10⁻⁶ s/op
Iteration   1: ≈ 10⁻⁶ s/op
Iteration   2: ≈ 10⁻⁶ s/op
Iteration   3: ≈ 10⁻⁶ s/op

# Run progress: 87.50% complete, ETA 00:00:04
# Fork: 2 of 2
# Warmup Iteration   1: ≈ 10⁻⁶ s/op
Iteration   1: ≈ 10⁻⁶ s/op
Iteration   2: ≈ 10⁻⁶ s/op
Iteration   3: ≈ 10⁻⁶ s/op


Result "com.dragon.core.serialize.SerializeTest.kryoSerializeTest":
  ≈ 10⁻⁶ s/op


# Run complete. Total time: 00:00:39

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                            Mode  Cnt   Score    Error  Units
SerializeTest.fastJsonSerializeTest  avgt    6  ≈ 10⁻⁶            s/op
SerializeTest.hessianSerializeTest   avgt    6  ≈ 10⁻⁶            s/op
SerializeTest.jdkSerializeTest       avgt    6  ≈ 10⁻⁵            s/op
SerializeTest.kryoSerializeTest      avgt    6  ≈ 10⁻⁶            s/op

Process finished with exit code 0
